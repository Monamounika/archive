#! /bin/bash

EXIT="Good Bye, then..."

if [ ! -e  $HOME/Development/Projects ] ; then
	mkdir $HOME/Development/Projects
fi


cd $HOME/Development/Projects
read -rp "What Project do you wish to access? : 
$(ls $HOME/Development/Projects )
:  " proj
if [ "$proj" == "exit" ] ; then
	echo "$EXIT"
	exit
elif [ "$proj" == "rm" ] ; then
	read -rp "What Project would you like to delete? : 
$(ls -1 .) : " delete
	sudo rm -rf "$delete"
	echo "$delete has been removed"
	read -rp "Would you like to start a new Project: " answer
	if [ "$answer" == "y" ] ; then
		$HOME/Development/buds
	elif [ "$answer" == "n" ] ; then
		exit
	fi
elif [ "$proj" == "mv" ] ; then
	read -rp "What Project would you like to rename?
$(ls -1 .) : " rename
	read -rp "What would you like to call $rename : " name
	mv "$rename" "$name"
	echo "$rename has been renamed"
	read -rp "Would you like to start a new Project: " answer
	if [ "$answer" == "y" ] ; then
		$HOME/Development/buds
	elif [ "$answer" == "n" ] ; then
		exit
	fi

elif [ ! -e "$proj" ] ; then
	read -rp "That project does not exist! Do you wish to create an entry? [y/n]: " answer
	if [ $answer == "exit" ] ; then
		echo "$EXIT"
		exit
	elif [ $answer == "y" ] ; then
		echo "Creating Project now!"
		
		## make $proj directory
		
		mkdir "$proj"
		
		##make scripts and language specific directories
		
		mkdir "$proj"/Scripts
		mkdir "$proj"/Scripts/Bash
		mkdir "$proj"/Scripts/Bash/src
		mkdir "$proj"/Scripts/Bash/bin
		mkdir "$proj"/Scripts/Bash/doc

		mkdir "$proj"/Scripts/Python
		mkdir "$proj"/Scripts/Python/src
		mkdir "$proj"/Scripts/Python/bin
		mkdir "$proj"/Scripts/Python/doc

		mkdir "$proj"/Scripts/C-Sharp
		mkdir "$proj"/Scripts/C-Sharp/src
		mkdir "$proj"/Scripts/C-Sharp/bin
		mkdir "$proj"/Scripts/C-Sharp/doc

		mkdir "$proj"/Scripts/Java-script
		mkdir "$proj"/Scripts/Java-script/src
		mkdir "$proj"/Scripts/Java-script/bin
		mkdir "$proj"/Scripts/Java-script/doc

		mkdir "$proj"/Scripts/HTML
		mkdir "$proj"/Scripts/HTML/src
		mkdir "$proj"/Scripts/HTML/bin
		mkdir "$proj"/Scripts/HTML/doc

		mkdir "$proj"/Scripts/XML
		mkdir "$proj"/Scripts/XML/src
		mkdir "$proj"/Scripts/XML/bin
		mkdir "$proj"/Scripts/XML/doc

		mkdir "$proj"/Scripts/XSS
		mkdir "$proj"/Scripts/XSS/src
		mkdir "$proj"/Scripts/XSS/bin
		mkdir "$proj"/Scripts/XSS/doc


		##make compiled and language specific directories
		
		mkdir "$proj"/Compiled
		mkdir "$proj"/Compiled/C
		mkdir "$proj"/Compiled/C/src
		mkdir "$proj"/Compiled/C/bin
		mkdir "$proj"/Compiled/C/doc

		mkdir "$proj"/Compiled/CPP
		mkdir "$proj"/Compiled/CPP/src
		mkdir "$proj"/Compiled/CPP/bin
		mkdir "$proj"/Compiled/CPP/doc

		mkdir "$proj"/Compiled/Java
		mkdir "$proj"/Compiled/Java/src
		mkdir "$proj"/Compiled/Java/bin
		mkdir "$proj"/Compiled/Java/doc

		mkdir "$proj"/Compiled/Fortran
		mkdir "$proj"/Compiled/Fortran/src
		mkdir "$proj"/Compiled/Fortran/bin
		mkdir "$proj"/Compiled/Fortran/doc

		mkdir "$proj"/Compiled/Pascal
		mkdir "$proj"/Compiled/Pascal/src
		mkdir "$proj"/Compiled/Pascal/bin
		mkdir "$proj"/Compiled/Pascal/doc

		#make data storage center

		mkdir "$proj"/Logs
		mkdir "$proj"/Logs/Bash
		mkdir "$proj"/Logs/Python
		mkdir "$proj"/Logs/C-Sharp
		mkdir "$proj"/Logs/C
		mkdir "$proj"/Logs/CPP
		mkdir "$proj"/Logs/Java
		mkdir "$proj"/Logs/Fortran
		mkdir "$proj"/Logs/Pascal
		
		# for other types of data
		mkdir "$proj"/Logs/other
	
		$HOME/Development/buds

	elif [ $answer == "n" ] ; then 
		echo "good bye, then..."
	fi
elif [ -e "$proj" ] ; then
		cd "$proj"
		read -rp "Is this project one of the following. Please type the one that it is. [Scripts|Compiled|Logs] " projType
		if [ "$projType" == "exit" ] ; then
			exit
		fi
		cd "$projType"
	if [ $projType == "exit" ] ; then
		echo $EXIT
		exit
	elif [ $projType != "Logs" ] ; then
			read -rp "Is this project one of the following. Please type the one that it is.
$(ls -1 . ) : " projLang
		if [ "$projLang" == "exit" ] ; then
			exit
		fi
		cd "$projLang"
		read -rp "Is this the portion of the project one of the following. Please type the one that it is.
$(ls -1 . ) : " portion
		if [ "$portion" == "exit" ] ; then
			exit
		fi
		cd $portion
		bash
	elif [ $projType == "Logs" ] ; then
		cd Logs
		read -rp "Which Language are/is the log/logs for? 
$(ls -1 .) : " logLang
		if [ "$logLang" == "exit" ] ; then
			exit
		fi
		cd $logLang
		bash
	fi	
fi

